title: Testing React Apps
description:
  Increase your deploy confidence by using Jest and React Testing Library to
  test your react components.
events:
  - title: Testing React Apps at React Advanced London
    url: https://ti.to/gitnation/react-advanced-conference-2021
    quantity: 40
    date: October 20th, 2021
meta:
  keywords:
    - react
    - testing
    - react testing library
    - jest
    - unit testing
    - component testing
    - integration testing
    - workshop
categories:
  - react
  - testing
convertKitTag: '1418848'
problemStatements:
  part1: Shipping code changes is nerve wracking
  part2:
    Not having automated tests to confirm those code changes don't break stuff
    is terrifying
  part3:
    Automated testing is an important part of any modern application. But it's
    easy to get wrong and you're left with **tests you need to babysit**. Nobody
    enjoys this, but it's the only way you know how to test, and it's better to
    have bad tests than no tests at all right? ... right!? (No it's not).
  part4:
    Hi, I'm Kent and I'm the creator of React Testing Library–the defacto
    standard testing tool of the React ecosystem. I also created the Testing
    Trophy–the modern testing approach for testing. I know a thing or two about
    this and other tools in the ecosystem and I'm excited to help you learn all
    about them.
keyTakeaways:
  - title: Understand React Testing Library
    description:
      Our abstractions often feel like magic, but really, it's all just
      JavaScript in those `node_modules`. When you understand how your tools
      work, you can use them more effectively and that's what you'll get out of
      this workshop for React Testing Library.
  - title: What "implementation details" means and how to avoid it
    description:
      You may have heard the phrase "testing implementation details" thrown
      around a lot in discussions about testing. After we're through here,
      you'll not only understand what it means, but you'll be able to spot it in
      code reviews and avoid making PRs that have this mistake yourself.
  - title: Mock HTTP requests
    description:
      Practical testing requires that we fake _some_ things we're doing in our
      apps. Otherwise you'd charge a real credit card every time you test the
      checkout. The problem is, you lose confidence when you mock things. It's a
      balance. When we're through here, you'll be equipped with the right tools
      and techniques to get the most out of that balance.
  - title: Reduce duplication between tests
    description:
      Many of our components require some state to be established before being
      rendered (mostly we're talking about context providers). You'll come away
      from this workshop knowing how to test these kinds of components and write
      your own helpful testing utilities so you don't have to repeat that setup
      for every test in your codebase.
topics:
  - How React Testing Library works under the hood
  - How to write tests that are "implementation detail free and refactor
    friendly"
  - Test components that make HTTP requests
  - Test components that use third party modules
  - Test mission-critical application forms
  - Create custom render functions to simplify testing across the application

prerequisite: >-
  Attend my [React Fundamentals Workshop](/workshops/react-fundamentals) or have
  the equivalent fundamental experience with React and JavaScript. Attend my
  [Testing Fundamentals Workshop](/workshops/testing-fundamentals) or have the
  equivalent experience with the fundamentals of testing. This workshop will use
  TypeScript, but should be completable if you do not have experience with
  TypeScript (or you could attend my [TypeScript to know for
  React](/workshops/typescript-to-know-for-react) workshop first).
