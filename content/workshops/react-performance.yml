title: React Performance
description:
  Learn to diagnose, profile, and fix performance problems in your React
  application using the Browser Performance Profiler, React DevTools Profiler,
  and proven React optimization techniques.
meta:
  keywords:
    - react
    - react performance
    - useMemo
    - useCallback
    - Pure Component
    - React.memo
    - shouldComponentUpdate
categories:
  - react
convertKitTag: '1090464'
problemStatements:
  part1: Your app is slower than it could be
  part2: Especially for users not on your fancy MacBook Pro
  part3:
    React is fast, but there are things we can do to inadvertantly slow it down.
    When your app feels slow, it reduces the trust our users have in our
    application's ability to solve their problems.
  part4:
    The perception of performance of your app has a lot to do with the feeling
    of reliability your users have. The last thing you want is your users to
    feel like they're on pins and needles when using your app hoping they don't
    break something.
keyTakeaways:
  - title: Use the Chrome DevTools profiler
    description:
      Whether you're using React or not, learning how to use the Chrome DevTools
      profiler will be critical for your performance profiling. You'll know how
      to identify a bottleneck and the proper way to create a benchmark and
      compare before/after to make sure your "optimizations" made things faster,
      (not slower!!).
  - title: Use the React DevTools profiler
    description:
      React has fantastic DevTools and they can help you find bottlenecks in
      your React code and identify ways to speed them. When we're done, you'll
      feel really comfortable with this powerful tool.
  - title: Use React's optimization features
    description:
      Once you've been able to determine what's causing slowness in your app,
      you'll want to optimize things to avoid wasted effort (and speed up your
      app). After this workshop, you'll understand how `React.memo`, `useMemo`,
      and `useCallback` work and when they can be used to speed up your app.
  - title: Side-step "pef death by a thousand cuts"
    description:
      Sometimes it's not just one thing that's causing a slow-down. Sometimes
      there's just a lot of stuff that's happening. In this workshop, you'll
      learn how to identify when you're in that situation and how you can employ
      tools and techniques to side-step these issues as well.
topics:
  - React DevTools profiler
  - Chrome DevTools profiler
  - Optimize React components with `React.memo`, `useMemo`, and `useCallback`
  - Apply better patterns for application state management to optimize
    components by default

prerequisite: >-
  Attend my [Advanced React Hooks Workshop](/workshops/advanced-react-hooks) or
  have the equivalent experience with advanced React concepts. This workshop
  will use TypeScript, but should be completable if you do not have experience
  with TypeScript (or you could attend my [TypeScript to know for
  React](/workshops/typescript-to-know-for-react) workshop first).
